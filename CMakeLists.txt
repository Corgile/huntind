CMAKE_MINIMUM_REQUIRED(VERSION 3.25)
PROJECT(hound)
SET(CMAKE_CXX_STANDARD 20)
SET(TARGET hd)

# !>> vendor
SET(VENDOR_PATH ${PROJECT_SOURCE_DIR}/vendor)
SET(CMAKE_MODULE_PATH ${VENDOR_PATH}/cmake;${CMAKE_MODULE_PATH})
INCLUDE(third-party)
# !<< vendor.

SET(HD_FEATURES ${HD_FEATURES} "HD_DEAD")
SET(HD_FEATURES ${HD_FEATURES} "HD_KAFKA")
SET(HD_FEATURES ${HD_FEATURES} "HD_BENCH")
#SET(HD_FEATURES ${HD_FEATURES} "HD_DEBUG")

FOREACH (MACRO IN LISTS HD_FEATURES)
    MESSAGE(STATUS "${BB}Compiling Macro: ${BC}${MACRO}${reset}")
    ADD_COMPILE_DEFINITIONS(${MACRO})
    # Remove the prefix HD_
    STRING(REPLACE "HD_" "" FEATURE ${MACRO})
    # Convert to lowercase
    STRING(TOLOWER ${FEATURE} FEATURE)
    SET(TARGET ${TARGET}-${FEATURE})
ENDFOREACH ()

MESSAGE(STATUS "${BG}Binary Target:  ${TARGET}${reset}")

#@formatter:off
# all public header for all source files
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include/yalanting)
AUX_SOURCE_DIRECTORY(source               SOURCE_FILES)
AUX_SOURCE_DIRECTORY(source/parser        SOURCE_FILES)
AUX_SOURCE_DIRECTORY(source/entity        SOURCE_FILES)
#@formatter:on

ADD_EXECUTABLE(${TARGET} main.cpp ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE pcap)
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE dbg_macro)
#IF (DEFINED HD_WITH_KAFKA)
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE rdkafka++)
#ENDIF ()
