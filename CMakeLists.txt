CMAKE_MINIMUM_REQUIRED(VERSION 3.25)
PROJECT(hound)
SET(CMAKE_CXX_STANDARD 20)
SET(TARGET hd-packet)
# !>> vendor
SET(VENDOR_PATH ${PROJECT_SOURCE_DIR}/vendor)
SET(CMAKE_MODULE_PATH ${VENDOR_PATH}/cmake;${CMAKE_MODULE_PATH})
INCLUDE(third-party)
# !<< vendor
MESSAGE(STATUS "${BoldGreen}Binary Target:  ${TARGET}${ColorReset}")
ADD_COMPILE_DEFINITIONS(HD_DEV)

LIST(APPEND CMAKE_PREFIX_PATH /data/Environment/SharedLib/libtorch)
FIND_PACKAGE(Torch REQUIRED)
MESSAGE(STATUS "Torch Libraries: ${TORCH_LIBRARIES}")
MESSAGE(STATUS "Torch Includes: ${TORCH_INCLUDE_DIRS}")

#@formatter:off
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include/yalanting/include)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include/yalanting/include/ylt/thirdparty)
AUX_SOURCE_DIRECTORY(source               SOURCE_FILES)
AUX_SOURCE_DIRECTORY(source/parser        SOURCE_FILES)
AUX_SOURCE_DIRECTORY(source/entity        SOURCE_FILES)
#@formatter:on

ADD_EXECUTABLE(${TARGET} main.cpp ${SOURCE_FILES})
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE pcap)
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE rdkafka++)
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE dbg_macro)
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE ${TORCH_LIBRARIES})
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE z)
TARGET_LINK_LIBRARIES(${TARGET} PRIVATE zstd)
